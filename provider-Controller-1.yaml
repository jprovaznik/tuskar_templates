description: 'OpenStack controller node configured by Puppet.

  '
heat_template_version: 2014-10-16
outputs:
  corosync_node:
    description: 'Node object in the format {ip: ..., name: ...} format that the corosync
      element expects

      '
    value:
      ip:
        get_attr:
        - Controller
        - networks
        - ctlplane
        - 0
      name:
        get_attr:
        - Controller
        - name
  hostname:
    description: Hostname of the server
    value:
      get_attr:
      - Controller
      - name
  hosts_entry:
    description: 'Server''s IP address and hostname in the /etc/hosts format

      '
    value:
      str_replace:
        params:
          CLOUDNAME:
            get_param: CloudName
          HOST:
            get_attr:
            - Controller
            - name
          IP:
            get_attr:
            - Controller
            - networks
            - ctlplane
            - 0
        template: IP HOST HOST.novalocal CLOUDNAME
  ip_address:
    description: IP address of the server in the ctlplane network
    value:
      get_attr:
      - Controller
      - networks
      - ctlplane
      - 0
  nova_server_resource:
    description: Heat resource handle for the Nova compute server
    value:
      get_resource: Controller
  swift_device:
    description: Swift device formatted for swift-ring-builder
    value:
      str_replace:
        params:
          IP:
            get_attr:
            - Controller
            - networks
            - ctlplane
            - 0
        template: r1z1-IP:%PORT%/d1
  swift_proxy_memcache:
    description: Swift proxy-memcache value
    value:
      str_replace:
        params:
          IP:
            get_attr:
            - Controller
            - networks
            - ctlplane
            - 0
        template: IP:11211
parameters:
  AdminPassword:
    default: unset
    description: The password for the keystone admin account, used for monitoring,
      querying neutron etc.
    hidden: true
    type: string
  AdminToken:
    default: unset
    description: The keystone auth secret.
    hidden: true
    type: string
  CeilometerMeteringSecret:
    default: unset
    description: Secret shared by the ceilometer services.
    hidden: true
    type: string
  CeilometerPassword:
    default: unset
    description: The password for the ceilometer service account.
    hidden: true
    type: string
  CinderEnableIscsiBackend:
    default: true
    description: Whether to enable or not the Iscsi backend for Cinder
    type: boolean
  CinderEnableRbdBackend:
    default: false
    description: Whether to enable or not the Rbd backend for Cinder
    type: boolean
  CinderISCSIHelper:
    default: tgtadm
    description: The iSCSI helper to use with cinder.
    type: string
  CinderLVMLoopDeviceSize:
    default: 5000
    description: The size of the loopback file used by the cinder LVM driver.
    type: number
  CinderPassword:
    default: unset
    description: The password for the cinder service account, used by cinder-api.
    hidden: true
    type: string
  CloudName:
    default: ''
    description: The DNS name of this cloud. E.g. ci-overcloud.tripleo.org
    type: string
  ControlVirtualInterface:
    default: br-ex
    description: Interface where virtual ip will be assigned.
    type: string
  ControllerExtraConfig:
    default: {}
    description: 'Controller specific configuration to inject into the cluster. Same

      structure as ExtraConfig.

      '
    type: json
  Debug:
    default: ''
    description: Set to True to enable debugging on all services.
    type: string
  EnablePackageInstall:
    default: 'false'
    description: Set to true to enable package installation via Puppet
    type: boolean
  ExtraConfig:
    default: {}
    description: "Additional configuration to inject into the cluster. The JSON should\
      \ have\nthe following structure:\n  {\"FILEKEY\":\n    {\"config\":\n      [{\"\
      section\": \"SECTIONNAME\",\n        \"values\":\n          [{\"option\": \"\
      OPTIONNAME\",\n            \"value\": \"VALUENAME\"\n           }\n        \
      \  ]\n       }\n      ]\n    }\n  }\nFor instance:\n  {\"nova\":\n    {\"config\"\
      :\n      [{\"section\": \"default\",\n        \"values\":\n          [{\"option\"\
      : \"compute_manager\",\n            \"value\": \"ironic.nova.compute.manager.ClusterComputeManager\"\
      \n           }\n          ]\n       },\n       {\"section\": \"cells\",\n  \
      \      \"values\":\n          [{\"option\": \"driver\",\n            \"value\"\
      : \"nova.cells.rpc_driver.CellsRPCDriver\"\n           }\n          ]\n    \
      \   }\n      ]\n    }\n  }\n"
    type: json
  Flavor:
    constraints:
    - custom_constraint: nova.flavor
    description: Flavor for control nodes to request when deploying.
    type: string
  GlanceLogFile:
    default: ''
    description: The filepath of the file to use for logging messages from Glance.
    type: string
  GlanceNotifierStrategy:
    default: noop
    description: Strategy to use for Glance notification queue
    type: string
  GlancePassword:
    default: unset
    description: The password for the glance service account, used by the glance services.
    hidden: true
    type: string
  GlancePort:
    default: '9292'
    description: Glance port.
    type: string
  GlanceProtocol:
    default: http
    description: Protocol to use when connecting to glance, set to https for SSL.
    type: string
  HeatAuthEncryptionKey:
    description: Auth encryption key for heat-engine
    type: string
  HeatPassword:
    default: unset
    description: The password for the Heat service account, used by the Heat services.
    hidden: true
    type: string
  HeatStackDomainAdminPassword:
    default: ''
    description: Password for heat_domain_admin user.
    hidden: true
    type: string
  Image:
    constraints:
    - custom_constraint: glance.image
    default: overcloud-control
    type: string
  ImageUpdatePolicy:
    default: REBUILD_PRESERVE_EPHEMERAL
    description: What policy to use when reconstructing instances. REBUILD for rebuilds,
      REBUILD_PRESERVE_EPHEMERAL to preserve /mnt.
    type: string
  KeyName:
    constraints:
    - custom_constraint: nova.keypair
    default: default
    description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    type: string
  KeystoneCACertificate:
    default: ''
    description: Keystone self-signed certificate authority certificate.
    type: string
  KeystoneSSLCertificate:
    default: ''
    description: Keystone certificate for verifying token validity.
    type: string
  KeystoneSSLCertificateKey:
    default: ''
    description: Keystone key for signing tokens.
    hidden: true
    type: string
  KeystoneSigningCertificate:
    default: ''
    description: Keystone certificate for verifying token validity.
    type: string
  KeystoneSigningKey:
    default: ''
    description: Keystone key for signing tokens.
    hidden: true
    type: string
  MysqlClusterUniquePart:
    default: unset
    description: A unique identifier of the MySQL cluster the controller is in.
    type: string
  MysqlInnodbBufferPoolSize:
    default: 0
    description: 'Specifies the size of the buffer pool in megabytes. Setting to zero
      should be interpreted as "no value" and will defer to the lower level default.

      '
    type: number
  MysqlRootPassword:
    default: ''
    hidden: true
    type: string
  NeutronAgentMode:
    default: dvr_snat
    description: Agent mode for the neutron-l3-agent on the controller hosts
    type: string
  NeutronAllowL3AgentFailover:
    default: 'True'
    description: Allow automatic l3-agent failover
    type: string
  NeutronBridgeMappings:
    default: ''
    description: 'The OVS logical->physical bridge mappings to use. See the Neutron
      documentation for details. Defaults to mapping br-ex - the external bridge on
      hosts - to a physical name ''datacentre'' which can be used to create provider
      networks (and we use this for the default floating network) - if changing this
      either use different post-install network scripts or be sure to keep ''datacentre''
      as a mapping network name.

      '
    type: string
  NeutronDVR:
    default: 'False'
    description: Whether to configure Neutron Distributed Virtual Routers
    type: string
  NeutronDnsmasqOptions:
    default: dhcp-option-force=26,1400
    description: Dnsmasq options for neutron-dhcp-agent. The default value here forces
      MTU to be set to 1400 to account for the gre tunnel overhead.
    type: string
  NeutronEnableTunnelling:
    default: 'True'
    type: string
  NeutronFlatNetworks:
    default: ''
    description: If set, flat networks to configure in neutron plugins.
    type: string
  NeutronL3HA:
    default: 'False'
    description: Whether to enable l3-agent HA
    type: string
  NeutronMechanismDrivers:
    default: openvswitch
    description: 'The mechanism drivers for the Neutron tenant network. To specify
      multiple

      values, use a comma separated string, like so: ''openvswitch,l2_population''

      '
    type: string
  NeutronMetadataProxySharedSecret:
    default: unset
    description: Shared secret to prevent spoofing
    type: string
  NeutronNetworkType:
    default: gre
    description: The tenant network type for Neutron, either gre or vxlan.
    type: string
  NeutronNetworkVLANRanges:
    default: datacentre
    description: 'The Neutron ML2 and OpenVSwitch vlan mapping range to support. See
      the Neutron documentation for permitted values. Defaults to permitting any VLAN
      on the ''datacentre'' physical network (See NeutronBridgeMappings).

      '
    type: string
  NeutronPassword:
    default: unset
    description: The password for the neutron service account, used by neutron agents.
    hidden: true
    type: string
  NeutronPublicInterface:
    default: nic1
    description: What interface to bridge onto br-ex for network nodes.
    type: string
  NeutronPublicInterfaceDefaultRoute:
    default: ''
    description: A custom default route for the NeutronPublicInterface.
    type: string
  NeutronPublicInterfaceIP:
    default: ''
    description: A custom IP address to put onto the NeutronPublicInterface.
    type: string
  NeutronPublicInterfaceRawDevice:
    default: ''
    description: If set, the public interface is a vlan with this device as the raw
      device.
    type: string
  NeutronPublicInterfaceTag:
    default: ''
    description: 'VLAN tag for creating a public VLAN. The tag will be used to create
      an access port on the exterior bridge for each control plane node, and that
      port will be given the IP address returned by neutron from the public network.
      Set CONTROLEXTRA=overcloud-vlan-port.yaml when compiling overcloud.yaml to include
      the deployment of VLAN ports to the control plane.

      '
    type: string
  NeutronTunnelTypes:
    default: gre
    description: 'The tunnel types for the Neutron tenant network. To specify multiple

      values, use a comma separated string, like so: ''gre,vxlan''

      '
    type: string
  NovaPassword:
    default: unset
    description: The password for the nova service account, used by nova-api.
    hidden: true
    type: string
  NtpServer:
    default: ''
    type: string
  PublicVirtualIP:
    default: ''
    type: string
  PublicVirtualInterface:
    default: br-ex
    description: 'Specifies the interface where the public-facing virtual ip will
      be assigned. This should be int_public when a VLAN is being used.

      '
    type: string
  RabbitClientPort:
    default: 5672
    description: Set rabbit subscriber port, change this if using SSL
    type: number
  RabbitClientUseSSL:
    default: false
    description: 'Rabbit client subscriber parameter to specify an SSL connection
      to the RabbitMQ host.

      '
    type: string
  RabbitCookie:
    default: ''
    hidden: true
    type: string
  RabbitPassword:
    default: guest
    description: The password for RabbitMQ
    hidden: true
    type: string
  RabbitUserName:
    default: guest
    description: The username for RabbitMQ
    type: string
  SSLCACertificate:
    default: ''
    description: If set, the contents of an SSL certificate authority file.
    type: string
  SSLCertificate:
    default: ''
    description: If set, the contents of an SSL certificate .crt file for encrypting
      SSL endpoints.
    hidden: true
    type: string
  SSLKey:
    default: ''
    description: If set, the contents of an SSL certificate .key file for encrypting
      SSL endpoints.
    hidden: true
    type: string
  SnmpdReadonlyUserName:
    default: ro_snmp_user
    description: The user name for SNMPd with readonly rights running on all Overcloud
      nodes
    type: string
  SnmpdReadonlyUserPassword:
    default: unset
    description: The user password for SNMPd with readonly rights running on all Overcloud
      nodes
    hidden: true
    type: string
  SwiftHashSuffix:
    default: unset
    description: A random string to be used as a salt when hashing to determine mappings
      in the ring.
    hidden: true
    type: string
  SwiftMinPartHours:
    default: 1
    description: The minimum time (in hours) before a partition in a ring can be moved
      following a rebalance.
    type: number
  SwiftMountCheck:
    default: 'false'
    description: Value of mount_check in Swift account/container/object -server.conf
    type: boolean
  SwiftPartPower:
    default: 10
    description: Partition Power to use when building Swift rings
    type: number
  SwiftPassword:
    default: unset
    description: The password for the swift service account, used by the swift proxy
      services.
    hidden: true
    type: string
  SwiftReplicas:
    default: 3
    description: How many replicas to use in the swift rings.
    type: number
  VirtualIP:
    default: ''
    type: string
  update_timestamp:
    default: ''
    type: string
resources:
  Controller:
    properties:
      flavor:
        get_param: Flavor
      image:
        get_param: Image
      image_update_policy:
        get_param: ImageUpdatePolicy
      key_name:
        get_param: KeyName
      networks:
      - network: ctlplane
      user_data:
        get_resource: NodeUserData
      user_data_format: SOFTWARE_CONFIG
    type: OS::Nova::Server
  ControllerConfig:
    properties:
      config:
        hiera:
          datafiles:
            ceph:
              raw_data:
                get_file: hieradata/ceph.yaml
            common:
              raw_data:
                get_file: hieradata/common.yaml
            controller:
              mapped_data:
                admin_password:
                  get_input: admin_password
                bootstack_nodeid:
                  get_input: bootstack_nodeid
                ceilometer::agent::auth::auth_password:
                  get_input: ceilometer_password
                ceilometer::api::host:
                  get_input: controller_host
                ceilometer::api::keystone_auth_uri:
                  get_input: keystone_auth_uri
                ceilometer::api::keystone_identity_uri:
                  get_input: keystone_identity_uri
                ceilometer::api::keystone_password:
                  get_input: ceilometer_password
                ceilometer::db::database_connection:
                  get_input: ceilometer_dsn
                ceilometer::metering_secret:
                  get_input: ceilometer_metering_secret
                ceilometer::rabbit_host:
                  get_input: controller_virtual_ip
                ceilometer::rabbit_password:
                  get_input: rabbit_password
                ceilometer::rabbit_userid:
                  get_input: rabbit_username
                cinder::api::auth_uri:
                  get_input: keystone_auth_uri
                cinder::api::bind_host:
                  get_input: controller_host
                cinder::api::identity_uri:
                  get_input: keystone_identity_uri
                cinder::api::keystone_password:
                  get_input: cinder_password
                cinder::database_connection:
                  get_input: cinder_dsn
                cinder::rabbit_password:
                  get_input: rabbit_password
                cinder::rabbit_userid:
                  get_input: rabbit_username
                cinder_enable_iscsi_backend:
                  get_input: cinder_enable_iscsi_backend
                cinder_enable_rbd_backend:
                  get_input: cinder_enable_rbd_backend
                cinder_iscsi_helper:
                  get_input: cinder_iscsi_helper
                cinder_iscsi_ip_address:
                  get_input: controller_host
                cinder_lvm_loop_device_size:
                  get_input: cinder_lvm_loop_device_size
                control_virtual_interface:
                  get_input: control_virtual_interface
                controller_host:
                  get_input: controller_host
                controller_virtual_ip:
                  get_input: controller_virtual_ip
                debug:
                  get_input: debug
                enable_package_install:
                  get_input: enable_package_install
                glance::api::auth_uri:
                  get_input: keystone_auth_uri
                glance::api::bind_host:
                  get_input: controller_host
                glance::api::bind_port:
                  get_input: glance_port
                glance::api::database_connection:
                  get_input: glance_dsn
                glance::api::identity_uri:
                  get_input: keystone_identity_uri
                glance::api::keystone_password:
                  get_input: glance_password
                glance::api::registry_host:
                  get_input: controller_host
                glance::backend::swift::swift_store_auth_address:
                  get_input: glance_swift_store_auth_address
                glance::backend::swift::swift_store_key:
                  get_input: glance_password
                glance::backend::swift::swift_store_user: service:glance
                glance::registry::auth_uri:
                  get_input: keystone_auth_uri
                glance::registry::bind_host:
                  get_input: controller_host
                glance::registry::database_connection:
                  get_input: glance_dsn
                glance::registry::identity_uri:
                  get_input: keystone_identity_uri
                glance::registry::keystone_password:
                  get_input: glance_password
                glance_log_file:
                  get_input: glance_log_file
                glance_notifier_strategy:
                  get_input: glance_notifier_strategy
                glance_port:
                  get_input: glance_port
                glance_protocol:
                  get_input: glance_protocol
                heat::api::bind_host:
                  get_input: controller_host
                heat::api_cfn::bind_host:
                  get_input: controller_host
                heat::api_cloudwatch::bind_host:
                  get_input: controller_host
                heat::auth_uri:
                  get_input: keystone_auth_uri
                heat::database_connection:
                  get_input: heat_dsn
                heat::engine::auth_encryption_key:
                  get_input: heat_auth_encryption_key
                heat::engine::heat_metadata_server_url:
                  get_input: heat.metadata_server_url
                heat::engine::heat_waitcondition_server_url:
                  get_input: heat.waitcondition_server_url
                heat::engine::heat_watch_server_url:
                  get_input: heat.watch_server_url
                heat::identity_uri:
                  get_input: keystone_identity_uri
                heat::instance_user: heat-admin
                heat::keystone_password:
                  get_input: heat_password
                heat::rabbit_host:
                  get_input: controller_virtual_ip
                heat::rabbit_password:
                  get_input: rabbit_password
                heat::rabbit_userid:
                  get_input: rabbit_username
                heat_stack_domain_admin_password:
                  get_input: heat_stack_domain_admin_password
                keystone::admin_bind_host:
                  get_input: controller_host
                keystone::admin_token:
                  get_input: admin_token
                keystone::database_connection:
                  get_input: keystone_dsn
                keystone::public_bind_host:
                  get_input: controller_host
                keystone_ca_certificate:
                  get_input: keystone_ca_certificate
                keystone_signing_certificate:
                  get_input: keystone_signing_certificate
                keystone_signing_key:
                  get_input: keystone_signing_key
                keystone_ssl_certificate:
                  get_input: keystone_ssl_certificate
                keystone_ssl_certificate_key:
                  get_input: keystone_ssl_certificate_key
                mysql::server::root_password:
                  get_input: mysql_root_password
                mysql_cluster_name:
                  get_input: mysql_cluster_name
                mysql_innodb_buffer_pool_size:
                  get_input: mysql_innodb_buffer_pool_size
                neutron::agents::metadata::auth_password:
                  get_input: neutron_password
                neutron::agents::metadata::metadata_ip:
                  get_input: controller_virtual_ip
                neutron::agents::metadata::shared_secret:
                  get_input: neutron_metadata_proxy_shared_secret
                neutron::agents::ml2::ovs::enable_tunneling:
                  get_input: neutron_enable_tunneling
                neutron::agents::ml2::ovs::local_ip:
                  get_input: controller_host
                neutron::bind_host:
                  get_input: controller_host
                neutron::plugins::ml2::network_vlan_ranges:
                  get_input: neutron_network_vlan_ranges
                neutron::rabbit_password:
                  get_input: rabbit_password
                neutron::rabbit_user:
                  get_input: rabbit_user
                neutron::server::auth_password:
                  get_input: neutron_password
                neutron::server::auth_uri:
                  get_input: keystone_auth_uri
                neutron::server::database_connection:
                  get_input: neutron_dsn
                neutron::server::identity_uri:
                  get_input: keystone_identity_uri
                neutron::server::l3_ha:
                  get_input: neutron_l3_ha
                neutron_agent_mode:
                  get_input: neutron_agent_mode
                neutron_allow_l3agent_failover:
                  get_input: neutron_allow_l3agent_failover
                neutron_bridge_mappings:
                  get_input: neutron_bridge_mappings
                neutron_dnsmasq_options:
                  get_input: neutron_dnsmasq_options
                neutron_dsn:
                  get_input: neutron_dsn
                neutron_flat_networks:
                  get_input: neutron_flat_networks
                neutron_mechanism_drivers:
                  get_input: neutron_mechanism_drivers
                neutron_public_interface:
                  get_input: neutron_public_interface
                neutron_public_interface_default_route:
                  get_input: neutron_public_interface_default_route
                neutron_public_interface_ip:
                  get_input: neutron_public_interface_ip
                neutron_public_interface_raw_device:
                  get_input: neutron_public_interface_raw_device
                neutron_public_interface_tag:
                  get_input: neutron_public_interface_tag
                neutron_router_distributed:
                  get_input: neutron_router_distributed
                neutron_tenant_network_type:
                  get_input: neutron_tenant_network_type
                neutron_tunnel_types:
                  get_input: neutron_tunnel_types
                nova::api::admin_password:
                  get_input: nova_password
                nova::api::api_bind_address:
                  get_input: controller_host
                nova::api::auth_uri:
                  get_input: keystone_auth_uri
                nova::api::identity_uri:
                  get_input: keystone_identity_uri
                nova::api::metadata_listen:
                  get_input: controller_host
                nova::api::neutron_metadata_proxy_shared_secret:
                  get_input: neutron_metadata_proxy_shared_secret
                nova::database_connection:
                  get_input: nova_dsn
                nova::network::neutron::neutron_admin_auth_url:
                  get_input: neutron_admin_auth_url
                nova::network::neutron::neutron_admin_password:
                  get_input: neutron_password
                nova::network::neutron::neutron_url:
                  get_input: neutron_url
                nova::rabbit_password:
                  get_input: rabbit_password
                nova::rabbit_userid:
                  get_input: rabbit_username
                ntp::servers:
                  get_input: ntp_servers
                public_virtual_interface:
                  get_input: public_virtual_interface
                public_virtual_ip:
                  get_input: public_virtual_ip
                rabbit_client_port:
                  get_input: rabbit_client_port
                rabbit_client_use_ssl:
                  get_input: rabbit_client_use_ssl
                rabbit_password:
                  get_input: rabbit_password
                rabbit_username:
                  get_input: rabbit_username
                rabbitmq::erlang_cookie:
                  get_input: rabbit_cookie
                snmpd_readonly_user_name:
                  get_input: snmpd_readonly_user_name
                snmpd_readonly_user_password:
                  get_input: snmpd_readonly_user_password
                swift::proxy::authtoken::admin_password:
                  get_input: swift_password
                swift::proxy::authtoken::auth_uri:
                  get_input: keystone_auth_uri
                swift::proxy::authtoken::identity_uri:
                  get_input: keystone_identity_uri
                swift::proxy::proxy_local_net_ip:
                  get_input: controller_host
                swift::storage::all::storage_local_net_ip:
                  get_input: controller_host
                swift::swift_hash_suffix:
                  get_input: swift_hash_suffix
                swift_mount_check:
                  get_input: swift_mount_check
                tripleo::loadbalancer::control_virtual_interface:
                  get_input: control_virtual_interface
                tripleo::loadbalancer::controller_virtual_ip:
                  get_input: controller_virtual_ip
                tripleo::loadbalancer::public_virtual_interface:
                  get_input: public_virtual_interface
                tripleo::loadbalancer::public_virtual_ip:
                  get_input: public_virtual_ip
                tripleo::ringbuilder::build_ring: true
                tripleo::ringbuilder::min_part_hours:
                  get_input: swift_min_part_hours
                tripleo::ringbuilder::part_power:
                  get_input: swift_part_power
                tripleo::ringbuilder::replicas:
                  get_input: swift_replicas
              raw_data:
                get_file: hieradata/controller.yaml
            object:
              raw_data:
                get_file: hieradata/object.yaml
          hierarchy:
          - heat_config_%{::deploy_config_name}
          - controller
          - object
          - swift_devices_and_proxy
          - ceph_cluster
          - ceph
          - bootstrap_node
          - all_nodes
          - common
      group: os-apply-config
    type: OS::Heat::StructuredConfig
  ControllerDeployment:
    properties:
      config:
        get_resource: ControllerConfig
      input_values:
        admin_password:
          get_param: AdminPassword
        admin_token:
          get_param: AdminToken
        bootstack_nodeid:
          get_attr:
          - Controller
          - name
        ceilometer_dsn:
          list_join:
          - ''
          - - mysql://ceilometer:unset@
            - get_param: VirtualIP
            - /ceilometer
        ceilometer_metering_secret:
          get_param: CeilometerMeteringSecret
        ceilometer_password:
          get_param: CeilometerPassword
        cinder_dsn:
          list_join:
          - ''
          - - mysql://cinder:unset@
            - get_param: VirtualIP
            - /cinder
        cinder_enable_iscsi_backend:
          get_param: CinderEnableIscsiBackend
        cinder_enable_rbd_backend:
          get_param: CinderEnableRbdBackend
        cinder_iscsi_helper:
          get_param: CinderISCSIHelper
        cinder_lvm_loop_device_size:
          get_param: CinderLVMLoopDeviceSize
        cinder_password:
          get_param: CinderPassword
        control_virtual_interface:
          get_param: ControlVirtualInterface
        controller_host:
          get_attr:
          - Controller
          - networks
          - ctlplane
          - 0
        controller_virtual_ip:
          get_param: VirtualIP
        debug:
          get_param: Debug
        enable_package_install:
          get_param: EnablePackageInstall
        glance_dsn:
          list_join:
          - ''
          - - mysql://glance:unset@
            - get_param: VirtualIP
            - /glance
        glance_log_file:
          get_param: GlanceLogFile
        glance_notifier_strategy:
          get_param: GlanceNotifierStrategy
        glance_password:
          get_param: GlancePassword
        glance_port:
          get_param: GlancePort
        glance_protocol:
          get_param: GlanceProtocol
        glance_swift_store_auth_address:
          list_join:
          - ''
          - - http://
            - get_param: VirtualIP
            - :5000/v2.0
        heat.metadata_server_url:
          list_join:
          - ''
          - - http://
            - get_param: VirtualIP
            - :8000
        heat.waitcondition_server_url:
          list_join:
          - ''
          - - http://
            - get_param: VirtualIP
            - :8000/v1/waitcondition
        heat.watch_server_url:
          list_join:
          - ''
          - - http://
            - get_param: VirtualIP
            - :8003
        heat_auth_encryption_key:
          get_param: HeatAuthEncryptionKey
        heat_dsn:
          list_join:
          - ''
          - - mysql://heat:unset@
            - get_param: VirtualIP
            - /heat
        heat_password:
          get_param: HeatPassword
        heat_stack_domain_admin_password:
          get_param: HeatStackDomainAdminPassword
        keystone_auth_uri:
          list_join:
          - ''
          - - http://
            - get_param: VirtualIP
            - :5000/v2.0/
        keystone_ca_certificate:
          get_param: KeystoneCACertificate
        keystone_dsn:
          list_join:
          - ''
          - - mysql://keystone:unset@
            - get_param: VirtualIP
            - /keystone
        keystone_identity_uri:
          list_join:
          - ''
          - - http://
            - get_param: VirtualIP
            - :35357/
        keystone_signing_certificate:
          get_param: KeystoneSigningCertificate
        keystone_signing_key:
          get_param: KeystoneSigningKey
        keystone_ssl_certificate:
          get_param: KeystoneSSLCertificate
        keystone_ssl_certificate_key:
          get_param: KeystoneSSLCertificateKey
        mysql_cluster_name:
          str_replace:
            params:
              CLUSTER:
                get_param: MysqlClusterUniquePart
            template: tripleo-CLUSTER
        mysql_innodb_buffer_pool_size:
          get_param: MysqlInnodbBufferPoolSize
        mysql_root_password:
          get_param: MysqlRootPassword
        neutron_admin_auth_url:
          list_join:
          - ''
          - - http://
            - get_param: VirtualIP
            - :35357/v2.0
        neutron_agent_mode:
          get_param: NeutronAgentMode
        neutron_allow_l3agent_failover:
          get_param: NeutronAllowL3AgentFailover
        neutron_bridge_mappings:
          get_param: NeutronBridgeMappings
        neutron_dnsmasq_options:
          get_param: NeutronDnsmasqOptions
        neutron_dsn:
          list_join:
          - ''
          - - mysql://neutron:unset@
            - get_param: VirtualIP
            - /ovs_neutron?charset=utf8
        neutron_enable_tunneling:
          get_param: NeutronEnableTunnelling
        neutron_flat_networks:
          get_param: NeutronFlatNetworks
        neutron_l3_ha:
          get_param: NeutronL3HA
        neutron_mechanism_drivers:
          get_param: NeutronMechanismDrivers
        neutron_metadata_proxy_shared_secret:
          get_param: NeutronMetadataProxySharedSecret
        neutron_network_vlan_ranges:
          get_param: NeutronNetworkVLANRanges
        neutron_password:
          get_param: NeutronPassword
        neutron_public_interface:
          get_param: NeutronPublicInterface
        neutron_public_interface_default_route:
          get_param: NeutronPublicInterfaceDefaultRoute
        neutron_public_interface_ip:
          get_param: NeutronPublicInterfaceIP
        neutron_public_interface_raw_device:
          get_param: NeutronPublicInterfaceRawDevice
        neutron_public_interface_tag:
          get_param: NeutronPublicInterfaceTag
        neutron_router_distributed:
          get_param: NeutronDVR
        neutron_tenant_network_type:
          get_param: NeutronNetworkType
        neutron_tunnel_types:
          get_param: NeutronTunnelTypes
        neutron_url:
          list_join:
          - ''
          - - http://
            - get_param: VirtualIP
            - :9696
        nova_dsn:
          list_join:
          - ''
          - - mysql://nova:unset@
            - get_param: VirtualIP
            - /nova
        nova_password:
          get_param: NovaPassword
        ntp_servers:
          str_replace:
            params:
              server:
                get_param: NtpServer
            template: '["server"]'
        public_virtual_interface:
          get_param: PublicVirtualInterface
        public_virtual_ip:
          get_param: PublicVirtualIP
        rabbit_client_port:
          get_param: RabbitClientPort
        rabbit_client_use_ssl:
          get_param: RabbitClientUseSSL
        rabbit_cookie:
          get_param: RabbitCookie
        rabbit_password:
          get_param: RabbitPassword
        rabbit_username:
          get_param: RabbitUserName
        snmpd_readonly_user_name:
          get_param: SnmpdReadonlyUserName
        snmpd_readonly_user_password:
          get_param: SnmpdReadonlyUserPassword
        swift_hash_suffix:
          get_param: SwiftHashSuffix
        swift_min_part_hours:
          get_param: SwiftMinPartHours
        swift_mount_check:
          get_param: SwiftMountCheck
        swift_part_power:
          get_param: SwiftPartPower
        swift_password:
          get_param: SwiftPassword
        swift_replicas:
          get_param: SwiftReplicas
      server:
        get_resource: Controller
      signal_transport: NO_SIGNAL
    type: OS::TripleO::SoftwareDeployment
  NetworkConfig:
    type: OS::TripleO::Net::SoftwareConfig
  NetworkDeployment:
    properties:
      config:
        get_attr:
        - NetworkConfig
        - config_id
      input_values:
        bridge_name: br-ex
        interface_name:
          get_param: NeutronPublicInterface
      server:
        get_resource: Controller
      signal_transport: NO_SIGNAL
    type: OS::TripleO::SoftwareDeployment
  NodeUserData:
    type: OS::TripleO::NodeUserData
  update_config:
    properties:
      config:
        get_file: manifests/do_update.sh
      group: script
      inputs:
      - description: Timestamp of the most recent update request
        name: update_after_time
    type: OS::Heat::SoftwareConfig
  update_deployment:
    properties:
      config:
        get_resource: update_config
      input_values:
        update_after_time:
          get_param: update_timestamp
      server:
        get_resource: Controller
      signal_transport: NO_SIGNAL
    type: OS::Heat::SoftwareDeployment
